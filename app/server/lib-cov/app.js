/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['app.js']) {
  _$jscoverage['app.js'] = [];
  _$jscoverage['app.js'][6] = 0;
  _$jscoverage['app.js'][8] = 0;
  _$jscoverage['app.js'][9] = 0;
  _$jscoverage['app.js'][10] = 0;
  _$jscoverage['app.js'][14] = 0;
  _$jscoverage['app.js'][15] = 0;
  _$jscoverage['app.js'][16] = 0;
  _$jscoverage['app.js'][17] = 0;
  _$jscoverage['app.js'][18] = 0;
  _$jscoverage['app.js'][19] = 0;
  _$jscoverage['app.js'][20] = 0;
  _$jscoverage['app.js'][21] = 0;
  _$jscoverage['app.js'][24] = 0;
  _$jscoverage['app.js'][25] = 0;
  _$jscoverage['app.js'][28] = 0;
  _$jscoverage['app.js'][29] = 0;
  _$jscoverage['app.js'][34] = 0;
  _$jscoverage['app.js'][35] = 0;
  _$jscoverage['app.js'][42] = 0;
  _$jscoverage['app.js'][43] = 0;
  _$jscoverage['app.js'][44] = 0;
  _$jscoverage['app.js'][46] = 0;
  _$jscoverage['app.js'][48] = 0;
  _$jscoverage['app.js'][49] = 0;
  _$jscoverage['app.js'][54] = 0;
  _$jscoverage['app.js'][55] = 0;
  _$jscoverage['app.js'][56] = 0;
}
_$jscoverage['app.js'][6]++;
var express = require("express");
_$jscoverage['app.js'][8]++;
var app = module.exports = express.createServer();
_$jscoverage['app.js'][9]++;
var io = require("socket.io").listen(app);
_$jscoverage['app.js'][10]++;
var events = require("events");
_$jscoverage['app.js'][14]++;
app.configure((function () {
  _$jscoverage['app.js'][15]++;
  __dir_root = __dirname + "/../";
  _$jscoverage['app.js'][16]++;
  app.set("views", __dir_root + "/views");
  _$jscoverage['app.js'][17]++;
  app.set("view engine", "jade");
  _$jscoverage['app.js'][18]++;
  app.use(express.bodyParser());
  _$jscoverage['app.js'][19]++;
  app.use(express.methodOverride());
  _$jscoverage['app.js'][20]++;
  app.use(app.router);
  _$jscoverage['app.js'][21]++;
  app.use(express["static"](__dir_root + "/public"));
}));
_$jscoverage['app.js'][24]++;
app.configure("development", (function () {
  _$jscoverage['app.js'][25]++;
  app.use(express.errorHandler({dumpExceptions: true, showStack: true}));
}));
_$jscoverage['app.js'][28]++;
app.configure("production", (function () {
  _$jscoverage['app.js'][29]++;
  app.use(express.errorHandler());
}));
_$jscoverage['app.js'][34]++;
app.get("/", (function (req, res) {
  _$jscoverage['app.js'][35]++;
  res.render("index", {title: "Remote.IO"});
}));
_$jscoverage['app.js'][42]++;
io.sockets.on("connection", (function (socket) {
  _$jscoverage['app.js'][43]++;
  socket.on("disconnect", (function () {
  _$jscoverage['app.js'][44]++;
  sockets.emit("disconnected");
}));
  _$jscoverage['app.js'][46]++;
  socket.emit(events.news, {hello: "world"});
  _$jscoverage['app.js'][48]++;
  socket.on(events.test, (function (from, msg) {
  _$jscoverage['app.js'][49]++;
  console.log(from + " say:" + msg);
}));
}));
_$jscoverage['app.js'][54]++;
if (! module.parent) {
  _$jscoverage['app.js'][55]++;
  app.listen(80);
  _$jscoverage['app.js'][56]++;
  console.log("Express server listening on port %d", app.address().port);
}
_$jscoverage['app.js'].source = ["","/**"," * Module dependencies."," */","","var express = require('express');","","var app = module.exports = express.createServer();","var io = require('socket.io').listen(app);","var events = require('events');","","// Configuration","","app.configure(function(){","  __dir_root = __dirname + '/../';","  app.set('views', __dir_root + '/views');","  app.set('view engine', 'jade');","  app.use(express.bodyParser());","  app.use(express.methodOverride());","  app.use(app.router);","  app.use(express['static'](__dir_root + '/public'));","});","","app.configure('development', function(){","  app.use(express.errorHandler({ dumpExceptions: true, showStack: true })); ","});","","app.configure('production', function(){","  app.use(express.errorHandler()); ","});","","// Routes","","app.get('/', function(req, res){","  res.render('index', {","    title: 'Remote.IO'","  });","});","","","// IO","io.sockets.on('connection', function(socket) {","    socket.on('disconnect', function() {","        sockets.emit('disconnected');","    });","    socket.emit(events.news, {hello: 'world'});","","    socket.on(events.test, function(from, msg) {","        console.log(from+' say:'+msg);","    });","});","// Only listen on $ node app.js","","if (!module.parent) {","  app.listen(80);","  console.log(\"Express server listening on port %d\", app.address().port);","}"];
